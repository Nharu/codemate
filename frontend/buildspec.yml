version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: ap-northeast-2
    IMAGE_REPO_NAME: codemate-dev-frontend
  parameter-store:
    AWS_ACCOUNT_ID: /codemate/dev/aws-account-id
    API_URL: /codemate/dev/frontend-api-url

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - LATEST_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - echo Using API_URL=$API_URL
      - docker build --build-arg NEXT_PUBLIC_API_URL=$API_URL -t $IMAGE_REPO_NAME:$IMAGE_TAG -f frontend/Dockerfile .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $IMAGE_URI
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $LATEST_URI

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $IMAGE_URI
      - docker push $LATEST_URI
      - echo Writing image definitions file...
      - printf '[{"name":"frontend","imageUri":"%s"}]' $IMAGE_URI > frontend-imagedefinitions.json

artifacts:
  files:
    - frontend-imagedefinitions.json
